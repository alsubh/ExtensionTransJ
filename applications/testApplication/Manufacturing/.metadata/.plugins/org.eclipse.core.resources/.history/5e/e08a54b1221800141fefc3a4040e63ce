package operator;

import processedComponent.PolishedWidget;
import processedComponent.RawWidget;
import processedComponent.RoughWidget;

import com.object.Widget;
import com.pile.WidgetPile;

private WidgetPile widgetPileObject = new WidgetPile();


public class Polisher implements Productor{

	int index=0;
	
	public RoughWidget getRoughWidget()
	{
		Widget wid= new Widget();
		//select the Widget from the WidgetPile
		wid = (Widget) widgetPileObject.retrieveSpecificWidgets("Raw");
		return (RoughWidget) wid; 
	}
	
	@Override
	public Object create(Object roughWid) {
		// TODO Auto-generated method stub
		PolishedWidget polishedWidget= new PolishedWidget((RoughWidget)roughWid);//getRoughWidget());
		polishedWidget.setStyle("Polished");
		add(polishedWidget);
		return polishedWidget;
	}

	@Override
	public void add(Object obj) {
		// TODO Auto-generated method stub
		
		//update
		remove((Widget)obj);
		WidgetPile.widgetPile.add((Widget)obj);
	}

	@Override
	public void remove(Object obj) {
		// TODO Auto-generated method stub
		
		//WidgetPile.widgetPile.remove(index);
		WidgetPile.widgetPile.remove(obj);
	}	
}
