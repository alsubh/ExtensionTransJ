package operator;

import java.util.ArrayList;
import java.util.List;

import processedComponent.RawWidget;
import processedComponent.RoughWidget;

import com.object.Goo;
import com.object.Widget;
import com.pile.GooPile;
import com.pile.WidgetPile;

public class Baker implements Productor{

	int index=0;
	private RawWidget rawWidget= new RawWidget();
	private WidgetPile widgetPileObject = new WidgetPile();
	
	public RawWidget getRawWidget()
	{
		Widget wid= new RawWidget();
		//select the Widget from the WidgetPile
		wid = (Widget) widgetPileObject.retrieveSpecificWidgets("Raw");
			// conditions: style is "Raw"  and the code start with "Raw"
		//remove the RawWidget from the Pile.
		remove(wid);
		return (RawWidget) wid; 
	}
	
	@Override
	public Object create(Object rawWid) {
		// TODO Auto-generated method stub
		RoughWidget roughWidget= new RoughWidget((RawWidget)rawWid);
		roughWidget.setStyle("Rough");
		return roughWidget;
	}

	@Override
	public void add(Object obj) {
		// TODO Auto-generated method stub
		widgetPileObject.add((Widget)obj);
	}

	@Override
	public void remove(Object obj) {
		// TODO Auto-generated method stub
		
		//WidgetPile.widgetPile.remove(index);
		WidgetPile.widgetPile.remove(obj);
	}	
	
	public void setRawWidget(RawWidget rawWidget) {
		this.rawWidget = rawWidget;
	}

}
