package umjdt.contexts;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.collections4.MultiMap;
import org.apache.commons.collections4.map.MultiValueMap;

import umjdt.concepts.TransactionThread;

public class Context implements Serializable{

	// collection of information 
		// TID, lock, snapshot, object of timestamp, and 
	
	private String name;
	private String type;
	private int numberOfParticipants=1;
	private MultiMap<TransactionThread , ?> ContextThreads;
	private List<TransactionThread> threads;
	
	public Context()
	{
		ContextThreads= new MultiValueMap<>();
		threads = new ArrayList<TransactionThread>();
	}

	public String getName() 
	{
		return name;
	}

	public void setName(String name) 
	{
		
		this.name = name;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}
	
	public void addContextThread (TransactionThread _transactionThread)
	
}